# Generated by Django 5.2.7 on 2025-10-19 11:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("hostname", models.CharField(max_length=255, unique=True)),
                ("ip_address", models.GenericIPAddressField()),
                ("port", models.IntegerField(default=8443)),
                (
                    "mode",
                    models.CharField(
                        choices=[("push", "Push Mode"), ("pull", "Pull Mode")],
                        default="push",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("offline", "Offline"),
                            ("online", "Online"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("certificate", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("position_x", models.FloatField(default=0)),
                ("position_y", models.FloatField(default=0)),
                ("version", models.CharField(blank=True, max_length=50)),
                ("operating_system", models.CharField(blank=True, max_length=100)),
                ("firewalld_version", models.CharField(blank=True, max_length=50)),
            ],
            options={
                "ordering": ["hostname"],
            },
        ),
        migrations.CreateModel(
            name="AgentCommand",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("command_type", models.CharField(max_length=50)),
                ("parameters", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("timeout", "Timeout"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("result", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("timeout", models.IntegerField(default=30)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("executed_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commands",
                        to="agents.agent",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FirewallZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("target", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True)),
                ("interfaces", models.JSONField(default=list)),
                ("sources", models.JSONField(default=list)),
                ("services", models.JSONField(default=list)),
                ("ports", models.JSONField(default=list)),
                ("masquerade", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zones",
                        to="agents.agent",
                    ),
                ),
            ],
            options={
                "unique_together": {("agent", "name")},
            },
        ),
        migrations.CreateModel(
            name="FirewallRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("service", "Service"),
                            ("port", "Port"),
                            ("rich", "Rich Rule"),
                            ("forward", "Forward Port"),
                            ("masquerade", "Masquerade"),
                            ("source_port", "Source Port"),
                            ("icmp_block", "ICMP Block"),
                        ],
                        max_length=20,
                    ),
                ),
                ("service", models.CharField(blank=True, max_length=100)),
                ("port", models.CharField(blank=True, max_length=20)),
                (
                    "protocol",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("tcp", "TCP"),
                            ("udp", "UDP"),
                            ("icmp", "ICMP"),
                            ("sctp", "SCTP"),
                            ("dccp", "DCCP"),
                        ],
                        max_length=10,
                    ),
                ),
                ("rich_rule", models.TextField(blank=True)),
                ("to_port", models.CharField(blank=True, max_length=20)),
                ("to_addr", models.GenericIPAddressField(blank=True, null=True)),
                ("source", models.CharField(blank=True, max_length=100)),
                ("destination", models.CharField(blank=True, max_length=100)),
                ("enabled", models.BooleanField(default=True)),
                ("permanent", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="agents.agent",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="agents.firewallzone",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="AgentConnection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("source_port", models.CharField(blank=True, max_length=20)),
                ("target_port", models.CharField(blank=True, max_length=20)),
                ("protocol", models.CharField(blank=True, max_length=10)),
                ("service", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                ("color", models.CharField(default="#007bff", max_length=7)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_connections",
                        to="agents.agent",
                    ),
                ),
                (
                    "target_agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_connections",
                        to="agents.agent",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("source_agent", "target_agent", "source_port", "target_port")
                },
            },
        ),
    ]
